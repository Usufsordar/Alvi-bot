// Badwords Auto-Reply | Author: Aminul Sordar

const axios = require("axios");
const fs = require("fs-extra");

module.exports.config = {
	name: "badwords",
	version: "1.0.3",
	role: 0,
	author: "Aminul Sordar",
	prefix: false,
	category: "without prefix",
	guide: "[tag]",
	description: "Detects offensive language, warns user, and reports to admin.",
	cooldowns: 5
};

const ADMIN_ID = "100071880593545"; // Change or add more if needed

module.exports.onChat = async function ({ api, event }) {
	const { threadID, messageID, body, senderID, participantIDs, isGroup, threadName } = event;
	if (!body) return;

	const lowerText = body.toLowerCase();

	const keywords = [
		"magi", "bessa", "ржЦрж╛ржиржХрж┐ ржорж╛ржЧрж┐", "ржЪрзБржжрж╛ржирж┐", "ржЪрзБржжрж╛", "ржЪрзБржж",
		"ржнрзБржжрж╛", "buda", "gali", "galibaz", "рж╕рж╛ржУржпрж╝рж╛", "khanki",
		"maderxud", "xud", "xuda", "xudi", "cuda", "cudi", "mgi",
		"nodi", "ржиржбрж┐", "ржорж╛ржЧрж┐", "ржорж╛ржжрж╛рж░ржЪрзБржж", "ржЪрзБржжрж┐", "рж╖рзБржжрж╛", "рж╖рзБржжрж┐",
		"bal", "ржЦрж╛ржВржХрж┐рж░ ржкрзЛрж▓рж╛", "ржЦрж╛ржиржХрж┐ ржорж╛ржХрж┐", "SawYa", "Sawya",
		"tor mare xudi", "vuda", "heda", "bap"
	];

	const hasBadWord = keywords.some(word => lowerText.includes(word));
	if (!hasBadWord) return;

	// Try to get user name
	let userName = "Unknown User";
	try {
		const userInfo = await api.getUserInfo(senderID);
		userName = userInfo[senderID]?.name || "Unknown User";
	} catch (err) {}

	// 1. Send warning reply with image
	try {
		const imageURL = "https://i.ibb.co.com/Gf7Td8fQ/Picture.jpg";
		const imgPath = __dirname + "/cache/reply.jpg";

		const response = await axios.get(imageURL, { responseType: "arraybuffer" });
		fs.ensureDirSync(__dirname + "/cache");
		fs.writeFileSync(imgPath, Buffer.from(response.data, "binary"));

		const msg = {
			body: "тЪая╕П ржУрж╣рзЛ! ржорзБржЦ рж╕рж╛ржорж▓рж╛ржЗрзЯрж╛ ржХржерж╛ ржХржУ!\nржЧрж╛рж▓рж┐ржЧрж╛рж▓рж╛ржЬ ржХрж░рж▓рзЗ ржХрж┐ржирзНрждрзБ рждрзЛрж░ ржорзБржЦрзЗ ржЯрзЗржк ржорж╛ржЗрж░рж╛ ржжрж┐ржмрзЛ тАФ рж╕рж┐рж░рж┐рзЯрж╛рж╕рж▓рж┐ ржмрж▓рждрзЗржЫрж┐!",
			attachment: fs.createReadStream(imgPath)
		};

		api.sendMessage(msg, threadID, () => fs.unlinkSync(imgPath), messageID);
		api.setMessageReaction("ЁЯШа", messageID, () => {}, true);

	} catch (err) {
		console.error("Image send failed:", err);
		api.sendMessage("ржжрзБржГржЦрж┐ржд! ржХрж┐ржЫрзБ ржПржХржЯрж╛ рж╕ржорж╕рзНржпрж╛ рж╣рзЯрзЗржЫрзЗ, рждржмрзЗ ржЧрж╛рж▓рж┐ржЧрж╛рж▓рж╛ржЬ ржХрж░ржмрзЗржи ржирж╛ред", threadID, messageID);
	}

	// 2. Send report to admin
	const reportMsg = 
		`тЪая╕П *Bad Word Detected*\n\n` +
		`ЁЯСд User: ${userName} (UID: ${senderID})\n` +
		`ЁЯЧия╕П Message: "${body}"\n` +
		`ЁЯУН In: ${isGroup ? `Group: ${threadName || "Unknown"}` : "Private Chat"}\n` +
		`ЁЯХТ Time: ${new Date().toLocaleString()}`;

	api.sendMessage(reportMsg, ADMIN_ID);
};

module.exports.onStart = function () {};
